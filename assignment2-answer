Q1
ans:$ chmod 777 q1.sh

for (( i=1; i<=10; i++ ))
do
mkdir a$i;
done
   
  $ ./q1.sh

Q2
Ans
while (true)
do

 echo "   M A I N - M E N U"
 echo "a. To find length of a string"
 echo "b. Copying string"
 echo "c. Concatenation of strings"
 echo "d. Compare two strings"
 echo "e. Reversing a string"
 echo "f. Exit"
 echo -n "Please enter option [a - f]"
 read str
 read opt
 case $opt in
  a) echo ${#str} 
     ;;
  b) cpvar=$str
     echo $cpvar 
     ;;

  c) read input
     echo $input$str   
     ;;

  d) read input
     if [ $input==$str ];
	then
	echo "equal"
     else
	echo "not equal"   
     fi
     ;; 

  e)echo $str | rev
     ;;

  f) echo "Bye $USER"
     exit 1;
	;;
  *) echo "$opt is an invaild option. Please select option between a-f only"
     echo "Press [enter] key to continue. . ."
     read enterKey;;
esac
done

Q3
Ans

i=0;
for entry in "$search_dir"/home/aman/work-place/Linux-cmd/assignment-2/Q3/*
do
  ((i=i+1))
  mv $entry $i.txt
done


Q4

   echo "Path = $PATH"  
   echo "Shell = $SHELL"
   echo "History = $HISTORY"
   echo "Logname = $LOGNAME"
   echo "Term = $TERM"
  
Q5

ls -la | cut -b 1-10
ls -la | cut -c 1-10

Q6

 #!/bin/bash

ls -l | awk '{ print $1,$9 }' 


Q7
 #!/bin/bash
for i in *
do
        if [ "-f" "$i" ];
                then
#       echo -n  "$i"   
        file=`ls -l "$i" | awk '{print $5}'`
#       echo "  $file"          
if [ "$file" > 5000 ];
                        then
                        ls -l "$i"
                fi 
        fi
done


--------------------------------------------------------------------------------------------

Q1.

	echo 'Enter a year : '
	read year
	if (( $year%4 == 0 && $year%100 != 0 || $year%400 == 0))
	then
		echo 'Leap Year'
	else
		echo 'Not a Leap Year'
	fi


Q2. 


	echo 'Enter the no of Day : '
	read day

	if [ $day == 1 ]
	then
		echo 'Sunday'
	elif [ $day == 2 ]
	then
		echo 'Monday'
	elif [ $day == 3 ]
	then
		echo 'Tuesday'
	elif [ $day == 4 ]
	then
		echo 'Wednesday'
	elif [ $day == 5 ]
	then
		echo 'Thrusday'
	elif [ $day == 6 ]
	then
		echo 'Friday'
	elif [ $day == 7 ]
	then
		echo 'Saturday'
	else
		echo 'Invalid Entry'
	fi


Q3
	echo 'Enter num1 : '
	read num1
	echo 'Enter num2 : '
	read num2
	echo 'Enter num3 : '
	read num3

	if (( num1 > num2 && num1 > num3 ))
	then
		echo $num1
	elif (( num2 > num1 && num2 > num3 ))
	then
		echo $num2
	else
		echo $num3
	fi

Q4.
	echo 'Enter a number : '
	read num

	if (( num%2 == 0 ))
	then 
		echo $num 'is Even.'
	else
		echo $num 'is Odd.'
	fi

Q5
	mon=$(date | awk '{print $3}')
	year=$(date | awk '{print $4}')

	let "prev=year-1" "next=year+1"

	cal $mon $prev
	cal $mon $year
	cal $mon $next

Q6
var1=10
var2=20
echo "scale=3; $var1/$var2" | bc -l
echo "scale=2; 5/4" | bc -l



var=$(echo "scale=2; 5/4" | bc -l)


	


	echo 'Enter num1 : '
	read num1
	echo 'Enter num2 : '
	read num2
	echo 'Enter num3 : '
	read num3

	(( avg = (( $num1+$num2+$num3 ))/3 ))
	echo 'Average : '$avg



	echo 'Enter num1 : '
	read num1
	echo 'Enter num2 : '
	read num2

	let "prodlet=num1*num2"

	prodExp=$(expr $num1 \* $num2)

	echo 'Let : '
	echo $prodlet 
	echo 'Expr : '
	echo $prodExp
	echo 'BC : '
	echo $num1 \* $num2 | bc


Q7
echo "Enter number upto which you want to: "
read num
pre=0
now=1
fnum=0
echo -n "$pre, $now, "
while (( pre + now < num ))
do
(( fnum = pre + now ))
echo -n "$fnum, "
pre=$now
now=$fnum
done

Q8
echo 'Enter a string : '
	read str
echo $str | rev



	echo 'Enter a string : '
	read str
	rev=""
	len=${#str}
	for (( i=$len; i>0; i-- ))
	do
		temp=$(expr $str | cut -c $i)
		rev=$rev$temp
	done

	echo $rev

Q9
 'Enter array of Strings : '
	read -a arr

	min=0
	max=`expr ${#arr[@]} - 1`
	x=$max
	while (( $min <= $max ))
	do
		newArr[$min]=${arr[$max]}
		newArr[$max]=${arr[$min]}
		(( min++ ))
		(( max-- ))
	done

	max=$x

	for (( i=0; i<=max; i++ ))
	do
		rev=""
		str=${newArr[$i]}
		let "len=${#str} -1"
		for (( j=$len; j>=0; j-- ))
		do
			rev="$rev${str:$j:1}"
		done
		newArr[$i]=$rev
	done

	echo ${newArr[@]}


Q10

echo  -e "Enter a number to reverse: \c"
read num
echo -e "The reverse of $num is: \c" 
echo $num | rev



--------------------------------------------------------------------------------------------

Q1.

	echo 'Enter a year : '
	read year
	if (( $year%4 == 0 && $year%100 != 0 || $year%400 == 0))
	then
		echo 'Leap Year'
	else
		echo 'Not a Leap Year'
	fi


Q2. 


	echo 'Enter the no of Day : '
	read day

	if [ $day == 1 ]
	then
		echo 'Sunday'
	elif [ $day == 2 ]
	then
		echo 'Monday'
	elif [ $day == 3 ]
	then
		echo 'Tuesday'
	elif [ $day == 4 ]
	then
		echo 'Wednesday'
	elif [ $day == 5 ]
	then
		echo 'Thrusday'
	elif [ $day == 6 ]
	then
		echo 'Friday'
	elif [ $day == 7 ]
	then
		echo 'Saturday'
	else
		echo 'Invalid Entry'
	fi


Q3
	echo 'Enter num1 : '
	read num1
	echo 'Enter num2 : '
	read num2
	echo 'Enter num3 : '
	read num3

	if (( num1 > num2 && num1 > num3 ))
	then
		echo $num1
	elif (( num2 > num1 && num2 > num3 ))
	then
		echo $num2
	else
		echo $num3
	fi

Q4.
	echo 'Enter a number : '
	read num

	if (( num%2 == 0 ))
	then 
		echo $num 'is Even.'
	else
		echo $num 'is Odd.'
	fi

Q5
	mon=$(date | awk '{print $3}')
	year=$(date | awk '{print $4}')

	let "prev=year-1" "next=year+1"

	cal $mon $prev
	cal $mon $year
	cal $mon $next

Q6
var1=10
var2=20
echo "scale=3; $var1/$var2" | bc -l
echo "scale=2; 5/4" | bc -l



var=$(echo "scale=2; 5/4" | bc -l)


	


	echo 'Enter num1 : '
	read num1
	echo 'Enter num2 : '
	read num2
	echo 'Enter num3 : '
	read num3

	(( avg = (( $num1+$num2+$num3 ))/3 ))
	echo 'Average : '$avg



	echo 'Enter num1 : '
	read num1
	echo 'Enter num2 : '
	read num2

	let "prodlet=num1*num2"

	prodExp=$(expr $num1 \* $num2)

	echo 'Let : '
	echo $prodlet 
	echo 'Expr : '
	echo $prodExp
	echo 'BC : '
	echo $num1 \* $num2 | bc


Q7
echo "Enter number upto which you want to: "
read num
pre=0
now=1
fnum=0
echo -n "$pre, $now, "
while (( pre + now < num ))
do
(( fnum = pre + now ))
echo -n "$fnum, "
pre=$now
now=$fnum
done

Q8
echo 'Enter a string : '
	read str
echo $str | rev



	echo 'Enter a string : '
	read str
	rev=""
	len=${#str}
	for (( i=$len; i>0; i-- ))
	do
		temp=$(expr $str | cut -c $i)
		rev=$rev$temp
	done

	echo $rev

Q9
 'Enter array of Strings : '
	read -a arr

	min=0
	max=`expr ${#arr[@]} - 1`
	x=$max
	while (( $min <= $max ))
	do
		newArr[$min]=${arr[$max]}
		newArr[$max]=${arr[$min]}
		(( min++ ))
		(( max-- ))
	done

	max=$x

	for (( i=0; i<=max; i++ ))
	do
		rev=""
		str=${newArr[$i]}
		let "len=${#str} -1"
		for (( j=$len; j>=0; j-- ))
		do
			rev="$rev${str:$j:1}"
		done
		newArr[$i]=$rev
	done

	echo ${newArr[@]}


Q10

echo  -e "Enter a number to reverse: \c"
read num
echo -e "The reverse of $num is: \c" 
echo $num | rev



